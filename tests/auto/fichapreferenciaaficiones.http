
### THIS IS AN AUTO-GENERATED TEST SUITE, IT NEEDS TO BE COMPLETED WITH VALID DATA
### THESE ARE NOT ALL YOU NEED, MORE OF THEM MUST BE CREATED TO EVALUATE THE FUNCTIONAL
### REQUIREMENTS OF THE PROJECT AT HAND, THESE TEST ONLY TEST THE CRUD PORTION OF THE ENTITY.
### Silence is a DEAL research team project, more info about us in https://deal.us.es
@BASE = http://127.0.0.1:8080/api/v1

### Auxiliary query
### Positive test
### Test 00: Get all existing fichapreferenciaaficiones
### This query is used in several of the below tests it should be executed first.
# @name fichapreferenciaaficiones
GET {{BASE}}/fichapreferenciaaficiones

### Login a(n) usuarios and save the generated token 
### This token is used in several of the below tests it should be executed second.
# @name login
POST {{BASE}}/login 
Content-Type: application/json 

{ 
	"email": ###REPLACE###,
	"PASSWORD": ###REPLACE###
}

###
@token = {{login.response.body.sessionToken}}


### TESTS BEGIN

### Test 01: Get one existing fichapreferenciaaficiones by its id.
### positive test 
@ficId = {{fichapreferenciaaficiones.response.body.0.fichaPreferenciaAficionId}}
GET {{BASE}}/fichapreferenciaaficiones/{{ficId}} 
Content-Type: application/json 


### Test 02: Try get one existing fichapreferenciaaficiones by its nonexistent id.
### negative test 
GET {{BASE}}/fichapreferenciaaficiones/999999999
Content-Type: application/json 


### Test 03: Add a new fichapreferenciaaficiones successfully
### Positive test 
### We assume that the token has been aquired by the login request.
# @name newfichapreferenciaaficiones
POST {{BASE}}/fichapreferenciaaficiones 
Content-Type: application/json 
Token: {{token}} 

{
	"fichaPreferenciaid": ###REPLACE###,
	"aficionId": ###REPLACE###
} 

### Check the created fichapreferenciaaficiones

@newfichapreferenciaaficionesid = {{newfichapreferenciaaficiones.response.body.lastId}}
GET {{BASE}}/fichapreferenciaaficiones/{{newfichapreferenciaaficionesid}}
Content-Type: application/json 

### Test 04: Add a new fichapreferenciaaficiones without a session token
### Negative test 
POST {{BASE}}/fichapreferenciaaficiones 
Content-Type: application/json 

{ 
	"fichaPreferenciaid": ###REPLACE###,
	"aficionId": ###REPLACE###
}

### Test 05: Modify an existing fichapreferenciaaficiones 
### Positive test 
@ficId = {{fichapreferenciaaficiones.response.body.0.fichaPreferenciaAficionId}} 
PUT {{BASE}}/fichapreferenciaaficiones/{{ficId}} 
Content-Type: application/json 
Token: {{token}} 

{ 
	"fichaPreferenciaid": ###REPLACE###,
	"aficionId": ###REPLACE###
}

### Check the modified fichapreferenciaaficiones

GET {{BASE}}/fichapreferenciaaficiones/{{newfichapreferenciaaficionesid}}
Content-Type: application/json 

### Test 06: Try to modify an existing fichapreferenciaaficiones without a session token
### Negative test
@ficId = {{fichapreferenciaaficiones.response.body.0.fichaPreferenciaAficionId}}
PUT {{BASE}}/fichapreferenciaaficiones/{{ficId}}
Content-Type: application/json

{
	"fichaPreferenciaid": ###REPLACE###,
	"aficionId": ###REPLACE###
}

### Test 07: Delete an existing fichapreferenciaaficiones
### Positive test

### Create a new fichapreferenciaaficiones, which we will delete
# @name createdficToDelete
POST {{BASE}}/fichapreferenciaaficiones
Content-Type: application/json
Token: {{token}}

{
	"fichaPreferenciaid": ###REPLACE###,
	"aficionId": ###REPLACE###
}

### Check the created fichapreferenciaaficiones
@ficdelId = {{createdficToDelete.response.body.lastId}}
GET {{BASE}}/fichapreferenciaaficiones/{{ficdelId}}
Content-Type: application/json 

### Delete the fichapreferenciaaficiones
DELETE {{BASE}}/fichapreferenciaaficiones/{{ficdelId}}
Token: {{token}}

### Check the deleted fichapreferenciaaficiones
GET {{BASE}}/fichapreferenciaaficiones/{{ficdelId}}
Content-Type: application/json 

### Test 08: Try to delete a fichapreferenciaaficiones without a session token
### Negative test
DELETE {{BASE}}/fichapreferenciaaficiones/{{ficId}}

